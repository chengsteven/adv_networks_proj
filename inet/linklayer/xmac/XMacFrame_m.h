//
// Generated file, do not edit! Created by nedtool 5.4 from inet/linklayer/xmac/XMacFrame.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __INET_XMACFRAME_M_H
#define __INET_XMACFRAME_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif

// cplusplus {{
#include "inet/common/INETDefs.h"
#include "inet/linklayer/common/MACAddress.h"
// }}


namespace inet {

/**
 * Class generated from <tt>inet/linklayer/xmac/XMacFrame.msg:32</tt> by nedtool.
 * <pre>
 * //
 * // Frame for ~XMac. Frame size is configurable
 * // in the MAC layer. 
 * //
 * packet XMacFrame
 * {
 *     MACAddress src;     // source address
 *     MACAddress dest;    // destination address
 *     long sequenceId; // Sequence Number to detect duplicate messages
 * }
 * </pre>
 */
class INET_API XMacFrame : public ::omnetpp::cPacket
{
  protected:
    MACAddress src;
    MACAddress dest;
    long sequenceId;

  private:
    void copy(const XMacFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const XMacFrame&);

  public:
    XMacFrame(const char *name=nullptr, short kind=0);
    XMacFrame(const XMacFrame& other);
    virtual ~XMacFrame();
    XMacFrame& operator=(const XMacFrame& other);
    virtual XMacFrame *dup() const override {return new XMacFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual MACAddress& getSrc();
    virtual const MACAddress& getSrc() const {return const_cast<XMacFrame*>(this)->getSrc();}
    virtual void setSrc(const MACAddress& src);
    virtual MACAddress& getDest();
    virtual const MACAddress& getDest() const {return const_cast<XMacFrame*>(this)->getDest();}
    virtual void setDest(const MACAddress& dest);
    virtual long getSequenceId() const;
    virtual void setSequenceId(long sequenceId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const XMacFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, XMacFrame& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_XMACFRAME_M_H

